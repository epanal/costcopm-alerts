name: Costco PM Alert

on:
  workflow_dispatch:
  schedule:
    # Every 30 minutes (GitHub Actions uses UTC)
    - cron: "*/30 * * * *"
  push:
    branches: [ main ]

jobs:
  run-alert:
    runs-on: ubuntu-latest

    # Don't run on PRs from forks (no secrets there)
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install playwright python-dotenv atproto tweepy
          fi

      - name: Install Playwright (WebKit) + system deps
        run: python -m playwright install --with-deps webkit

      # Optional: cache Playwright browsers between runs (speeds up cold starts)
      - name: Cache Playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-webkit

      - name: Run Costco PM alert
        env:
          # Runtime knobs
          CI: "true"
          BROWSER: "webkit"
          HEADLESS: "true"
          POST_STATUS_UPDATES: "true"
          ALWAYS_POST_WHEN_INCONCLUSIVE: "true"

          # Bluesky (required)
          BSKY_HANDLE: ${{ secrets.BSKY_HANDLE }}
          BSKY_APP_PASSWORD: ${{ secrets.BSKY_APP_PASSWORD }}

          # X / Twitter (force on in CI; code still gates by cooldown/state-change)
          POST_TO_X: "true"
          MAX_X_POSTS_PER_MONTH: "450"
          MIN_SECONDS_BETWEEN_X_POSTS: "1800"
          TW_CONSUMER_KEY: ${{ secrets.TW_CONSUMER_KEY }}
          TW_CONSUMER_SECRET: ${{ secrets.TW_CONSUMER_SECRET }}
          TW_ACCESS_TOKEN: ${{ secrets.TW_ACCESS_TOKEN }}
          TW_ACCESS_TOKEN_SECRET: ${{ secrets.TW_ACCESS_TOKEN_SECRET }}
        run: |
          echo "Running Costco Precious Metals Alert..."
          python costcopm_alert.py
        continue-on-error: true

      - name: Retry once if failed
        if: failure()
        env:
          CI: "true"
          BROWSER: "webkit"
          HEADLESS: "true"
          POST_STATUS_UPDATES: "true"
          ALWAYS_POST_WHEN_INCONCLUSIVE: "true"
          BSKY_HANDLE: ${{ secrets.BSKY_HANDLE }}
          BSKY_APP_PASSWORD: ${{ secrets.BSKY_APP_PASSWORD }}
          POST_TO_X: "true"
          MAX_X_POSTS_PER_MONTH: "450"
          MIN_SECONDS_BETWEEN_X_POSTS: "1800"
          TW_CONSUMER_KEY: ${{ secrets.TW_CONSUMER_KEY }}
          TW_CONSUMER_SECRET: ${{ secrets.TW_CONSUMER_SECRET }}
          TW_ACCESS_TOKEN: ${{ secrets.TW_ACCESS_TOKEN }}
          TW_ACCESS_TOKEN_SECRET: ${{ secrets.TW_ACCESS_TOKEN_SECRET }}
        run: python costcopm_alert.py

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-artifacts
          path: |
            costco.png
            api-sample.json
            page.html
            run.har
            .x_post_state.json
          if-no-files-found: ignore
